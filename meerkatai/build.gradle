plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.capstone'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
    imports {
        // Spring Cloud 버전 - AWS SDK와 호환되는 버전으로 조정
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2022.0.4'
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.bytedeco:javacv-platform:1.5.8'
	
	// AWS 관련 의존성을 모두 통합 및 일관된 버전으로 설정
	implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.648')
	implementation 'com.amazonaws:aws-java-sdk-s3'
	
	// 테스트를 위한 Mockito 의존성
	testImplementation 'org.mockito:mockito-core:4.8.1'
	testImplementation 'org.mockito:mockito-inline:4.8.1'
}

tasks.named('test') {
	useJUnitPlatform()
	
	// AWS 환경 변수를 테스트에 전달
	environment "AWS_ACCESS_KEY_ID", System.getenv("AWS_ACCESS_KEY_ID")
	environment "AWS_SECRET_ACCESS_KEY", System.getenv("AWS_SECRET_ACCESS_KEY")
	environment "AWS_DEFAULT_REGION", System.getenv("AWS_DEFAULT_REGION") ?: "ap-northeast-2"
}